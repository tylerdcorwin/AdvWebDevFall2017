var Review = require('./review.model');
var debug = require('debug')('demo:review');
module.exports.home = function(req, res) {
  //exports.home/view/update are all functions
  //these corrospond to the middleware that gets used on index.js for the
  //ctrlHome.home/update/view
  if (req.method === 'POST') {
    //could also be UPDATE/DELETE/GET/SUPER etc
    var msg = '';
    //make a json object with these params
    Review.create({
        author: req.body.name, //these come from the pug file
        rating: req.body.rating,
        reviewText: req.body.review
      })
      .then(function() {
        msg = 'Review was Saved';
        return; //returns the promise
      })
      .catch(function(err) { //only when throwing an error
        msg = 'Review was not Saved';
        return err.message; //err.message to return the whole messgae
      }).then(function(err) { //this is the final promise denoted by .then
        res.render('index', {
          title: 'Employee',
          message: msg,
          error: err
          //this error message is getting generated by mongo
        });
      });
  } else {
    res.render('index', {
      title: 'Failed Employee',
      message: ''
    });
  }
};

module.exports.view = function(req, res) {
  Review
    .find()
    .exec() //returns a promise can add a .catch() to catch errors
    .then(function(results) {
      res.render('view', {
        title: 'View Results',
        results: results
      });
    });
};

//newly created function for delete
module.exports.delete = function(req, res) {
  var id = req.params.id,
    removed = 'ID was not found';
  if (id) {
    Review.remove({
        _id: id
      })
      .then(function() {
        removed = `${id} has been removed`;
        finish();
      })
      .catch(function(err) {
        removed = `${id} has not been removed`;
        finish();
      });
  } else {
    //no id found
    finish();
  }

  function finish() {
    res.render('delete', {
      title: removed
    });
  }
};

module.exports.update = function(req, res) {
  var id = req.params.id;
  var msg = '';
  if (req.method === 'POST') {
    id = req.body._id;
    Review
      .findById(id)
      .exec()
      .then(function(reviewData) {
        // figure out why the data is not saving.
        //debug(req.body);
        reviewData.author = req.body.name;
        reviewData.rating = req.body.rating;
        reviewData.reviewText = req.body.review;
        //return
        return reviewData.save();
      })
      .then(function() {
        msg = 'data has been updated';
        finished();
      })
      .catch(function() {
        msg = 'data has NOT been updated';
        finished();
      });
  } else {
    finished();
  }

  function finished() {
    Review
      .findOne({
        '_id': id
      })
      .exec()
      .then(function(results) {
        res.render('update', {
          title: 'Update Results',
          message: msg,
          results: results
        });
      })
      .catch(function() {
        res.render('notfound', {
          message: 'Sorry ID not found'
        });
      });
  }
};
